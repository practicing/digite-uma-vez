{"version":3,"sources":["1.initApp.js","2.datepicker.js","3.autocomplete.js"],"names":["autocompleteModule","angular","module","datepickerModule","app","controller","$scope","myDate","Date","minDate","getFullYear","getMonth","getDate","maxDate","autocompleteCtrl","$timeout","$q","$log","self","this","simulateQuery","states","loadAll","querySearch","selectedItemChange","searchTextChange","query","results","filter","createFilterFor","deferred","defer","resolve","Math","random","promise","text","info","item","JSON","stringify","allStates","split","map","state","value","toLowerCase","display","lowercaseQuery","lowercase","filterFn","indexOf"],"mappings":"AAEA,GAAAA,oBAAAC,QAAAC,OAAA,sBAAA,cACA,IAAAC,kBAAAF,QAAAC,OAAA,oBAAA,cACA,IAAAE,KAAAH,QAAAC,OAAA,UAAA,qBAAA,oBCJA,aAEAC,kBAAAE,WAAA,iBAAA,SAAAC,QACAA,OAAAC,OAAA,GAAAC,KACAF,QAAAG,QAAA,GAAAD,MACAF,OAAAC,OAAAG,cACAJ,OAAAC,OAAAI,WAAA,EACAL,OAAAC,OAAAK,UACAN,QAAAO,QAAA,GAAAL,MACAF,OAAAC,OAAAG,cACAJ,OAAAC,OAAAI,WAAA,EACAL,OAAAC,OAAAK,YCXA,eAEA,WAEAZ,mBAAAK,WAAA,0BAAA,WAAA,KAAA,OAAAS,kBAEA,SAAAA,kBAAAC,SAAAC,GAAAC,MACA,GAAAC,MAAAC,IACAD,MAAAE,cAAA,KAEAF,MAAAG,OAAAC,SACAJ,MAAAK,YAAAA,WACAL,MAAAM,mBAAAA,kBACAN,MAAAO,iBAAAA,gBAQA,SAAAF,aAAAG,OACA,GAAAC,SAAAD,MAAAR,KAAAG,OAAAO,OAAAC,gBAAAH,QAAAR,KAAAG,OACAS,QACA,IAAAZ,KAAAE,cAAA,CACAU,SAAAd,GAAAe,OACAhB,UAAA,WACAe,SAAAE,QAAAL,UACAM,KAAAC,SAAA,IAAA,MACA,OAAAJ,UAAAK,YACA,CACA,MAAAR,UAGA,QAAAF,kBAAAW,MACAnB,KAAAoB,KAAA,mBAAAD,MAEA,QAAAZ,oBAAAc,MACArB,KAAAoB,KAAA,mBAAAE,KAAAC,UAAAF,OAKA,QAAAhB,WACA,GAAAmB,WAAA,yBACA,OAAAA,WAAAC,MAAA,QAAAC,IAAA,SAAAC,OACA,OACAC,MAAAD,MAAAE,cACAC,QAAAH,SAOA,QAAAf,iBAAAH,OACA,GAAAsB,gBAAA/C,QAAAgD,UAAAvB,MACA,OAAA,SAAAwB,UAAAN,OACA,MAAAA,OAAAC,MAAAM,QAAAH,kBAAA","file":"digite-uma-vez.min.js","sourcesContent":["// 'use strict';\n\nvar autocompleteModule = angular.module('autocompleteModule', ['ngMaterial']);\nvar datepickerModule = angular.module('datepickerModule', ['ngMaterial']);\nvar app = angular.module('duvApp', ['autocompleteModule', 'datepickerModule']);\n","'use strict';\n\ndatepickerModule.controller('datepickerCtrl', function($scope) {\n  $scope.myDate = new Date();\n  $scope.minDate = new Date(\n      $scope.myDate.getFullYear(),\n      $scope.myDate.getMonth() - 2,\n      $scope.myDate.getDate());\n  $scope.maxDate = new Date(\n      $scope.myDate.getFullYear(),\n      $scope.myDate.getMonth() + 2,\n      $scope.myDate.getDate());\n});\n","'use strict';\n\n(function () {\n\n  autocompleteModule.controller('autocompleteController', ['$timeout', '$q', '$log', autocompleteCtrl]);\n\n  function autocompleteCtrl ($timeout, $q, $log) {\n    var self = this;\n    self.simulateQuery = false;\n    // list of `state` value/display objects\n    self.states        = loadAll();\n    self.querySearch   = querySearch;\n    self.selectedItemChange = selectedItemChange;\n    self.searchTextChange   = searchTextChange;\n    // ******************************\n    // Internal methods\n    // ******************************\n    /**\n     * Search for states... use $timeout to simulate\n     * remote dataservice call.\n     */\n    function querySearch (query) {\n      var results = query ? self.states.filter( createFilterFor(query) ) : self.states,\n          deferred;\n      if (self.simulateQuery) {\n        deferred = $q.defer();\n        $timeout(function () {\n          deferred.resolve(results);\n        }, Math.random() * 1000, false);\n        return deferred.promise;\n      } else {\n        return results;\n      }\n    }\n    function searchTextChange (text) {\n      $log.info('Text changed to ' + text);\n    }\n    function selectedItemChange (item) {\n      $log.info('Item changed to ' + JSON.stringify(item));\n    }\n    /**\n     * Build `states` list of key/value pairs\n     */\n    function loadAll () {\n      var allStates = 'NYC, VCP, SAO, YVR, YYZ';\n      return allStates.split(/, +/g).map( function (state) {\n        return {\n          value: state.toLowerCase(),\n          display: state\n        };\n      });\n    }\n    /**\n     * Create filter function for a query string\n     */\n    function createFilterFor (query) {\n      var lowercaseQuery = angular.lowercase(query);\n      return function filterFn (state) {\n        return (state.value.indexOf(lowercaseQuery) === 0);\n      };\n    }\n  }\n})();\n"],"sourceRoot":"/source/"}