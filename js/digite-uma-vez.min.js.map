{"version":3,"sources":["1.initApp.js","2.airport.js","3.autocomplete.js","3.datepicker.js"],"names":["autocompleteModule","angular","module","datepickerModule","aiportModule","app","service","$http","url","obj","get","then","results","autocompleteCtrl","$timeout","$q","$log","message","airportService","querySearch","query","deferred","self","states","filter","createFilterFor","simulateQuery","defer","resolve","Math","random","promise","searchTextChange","text","info","selectedItemChange","item","JSON","stringify","loadAll","airportData","allStates","res","status","data","map","airport","code","name","state","value","toLowerCase","display","lowercaseQuery","lowercase","indexOf","this","controller","$scope","origDate","Date","getFullYear","getMonth","getDate","destDate"],"mappings":"AAEA,YAEA,IAAAA,oBAAAC,QAAAC,OAAA,sBAAA,aAAA,iBACAC,iBAAAF,QAAAC,OAAA,oBAAA,eAEAE,aAAAH,QAAAC,OAAA,mBAEAG,IAAAJ,QAAAC,OAAA,UAAA,qBAAA,oBCLAE,cAAAE,QAAA,kBAAA,QAAA,SAAAC,GAEA,GAAAC,GAAA,qBACAC,IA0BA,OAxBAA,GAAAC,IAAA,WACA,MAAAH,GAAAG,IAAAF,GAAAG,KAAA,SAAAC,GACA,MAAAA,MAsBAH,KC7BA,WAMA,QAAAI,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAeA,QAAAC,GAAAC,GACA,GACAC,GADAT,EAAAQ,EAAAE,EAAAC,OAAAC,OAAAC,EAAAL,IAAAE,EAAAC,MAEA,OAAAD,GAAAI,eACAL,EAAAN,EAAAY,QACAb,EAAA,WACAO,EAAAO,QAAAhB,IACA,IAAAiB,KAAAC,UAAA,GACAT,EAAAU,SAEAnB,EAGA,QAAAoB,GAAAC,GACAjB,EAAAkB,KAAA,mBAAAD,GAEA,QAAAE,GAAAC,GACApB,EAAAkB,KAAA,mBAAAG,KAAAC,UAAAF,IAKA,QAAAG,KACA,GACAC,GADAC,EAAA,yBAGAD,GAAAtB,EAAAR,MAAAC,KAAA,SAAA+B,GACA,MAAAA,EAAAC,SACAH,EAAAE,EAAAE,KAGAH,EAAAD,EAAAK,IAAA,SAAAC,GACA,MAAAA,GAAAC,KAAA,MAAAD,EAAAE,OAGA1B,EAAAC,OAAAkB,EAAAI,IAAA,SAAAI,GACA,OACAC,MAAAD,EAAAE,cACAC,QAAAH,QAgBA,QAAAxB,GAAAL,GACA,GAAAiC,GAAApD,QAAAqD,UAAAlC,EACA,OAAA,UAAA6B,GACA,MAAA,KAAAA,EAAAC,MAAAK,QAAAF,IAvEA,GAAA/B,GAAAkC,IACAlC,GAAAI,eAAA,EAEAJ,EAAAC,OAAAgB,IACAjB,EAAAH,YAAAA,EACAG,EAAAa,mBAAAA,EACAb,EAAAU,iBAAAA,EAXAhC,mBACAkD,MAAA,UAAA,gBACAO,WAAA,0BAAA,WAAA,KAAA,OAAA,UAAA,iBAAA5C,OCJAV,iBAAAsD,WAAA,wBAAA,SAAA,SAAAC,GACAA,EAAAC,SAAA,GAAAC,MACAF,EAAAC,SAAA,GAAAC,MACAF,EAAAC,SAAAE,cACAH,EAAAC,SAAAG,WACAJ,EAAAC,SAAAI,WACAL,EAAAM,SAAA,GAAAJ,MACAF,EAAAC,SAAAE,cACAH,EAAAC,SAAAG,WACAJ,EAAAC,SAAAI,UAAA","file":"digite-uma-vez.min.js","sourcesContent":["/* eslint no-unused-vars: 0 */\n\n'use strict';\n\nvar autocompleteModule = angular.module('autocompleteModule', ['ngMaterial', 'aiportModule']);\nvar datepickerModule = angular.module('datepickerModule', ['ngMaterial']);\n\nvar aiportModule = angular.module('aiportModule', []);\n\nvar app = angular.module('duvApp', ['autocompleteModule', 'datepickerModule']);\n","/* global aiportModule */\n\n'use strict';\n\naiportModule.service('airportService', ['$http', function ($http) {\n\n  var url = 'data/airports.json';\n  var obj = {};\n\n  obj.get = function () {\n    return $http.get(url).then(function (results) {\n      return results;\n    });\n  };\n\n\n  // this.getCustomers = function() {\n  //   var promisse = $http({\n  //       method : 'POST',\n  //       url : '/CustomerManagementApp/customers/all'\n  //   }).success(function(data, status, headers, config) {\n  //       $log.log('Done');\n  //       angular.forEach(data, function(c) {\n  //           $log.log(c.firstName);\n  //       });\n  //       customers = data;\n  //       return customers;\n  //   });\n\n  //   return promise;\n  // };\n\n\n  return obj;\n  // $http.get(url)\n  //   .success(function (data, status, headers, config) {\n  //     return data;\n  //   })\n  //   .error(function (data, status, headers, config) {\n  //     // log error\n  //   });\n}]);\n\n\n// angular.module(\"services\", [])\n//   .factory(\"square\", [\"factor\", function (factor) {\n//     return factor * factor;\n//   }]);\n","/* global autocompleteModule */\n\n'use strict';\n\n(function () {\n\n  autocompleteModule\n    .value('message', 'Hello world!')\n    .controller('autocompleteController', ['$timeout', '$q', '$log', 'message', 'airportService', autocompleteCtrl]);\n\n  function autocompleteCtrl ($timeout, $q, $log, message, airportService) {\n    var self = this;\n    self.simulateQuery = false;\n    // list of `state` value/display objects\n    self.states        = loadAll();\n    self.querySearch   = querySearch;\n    self.selectedItemChange = selectedItemChange;\n    self.searchTextChange   = searchTextChange;\n    // ******************************\n    // Internal methods\n    // ******************************\n    /**\n     * Search for states... use $timeout to simulate\n     * remote dataservice call.\n     */\n    function querySearch (query) {\n      var results = query ? self.states.filter( createFilterFor(query) ) : self.states,\n        deferred;\n      if (self.simulateQuery) {\n        deferred = $q.defer();\n        $timeout(function () {\n          deferred.resolve(results);\n        }, Math.random() * 1000, false);\n        return deferred.promise;\n      } else {\n        return results;\n      }\n    }\n    function searchTextChange (text) {\n      $log.info('Text changed to ' + text);\n    }\n    function selectedItemChange (item) {\n      $log.info('Item changed to ' + JSON.stringify(item));\n    }\n    /**\n     * Build `states` list of key/value pairs\n     */\n    function loadAll () {\n      var allStates = 'NYC, VCP, SAO, YVR, YYZ';\n      var airportData;\n\n      airportData = airportService.get().then(function (res) {\n        if (res.status === 200) {\n          airportData = res.data;\n\n          // console.log(airportData);\n          allStates = airportData.map(function (airport) {\n            return airport.code + ' - ' + airport.name;\n          });\n\n          self.states = allStates.map(function (state) {\n            return {\n              value: state.toLowerCase(),\n              display: state\n            };\n          });\n        }\n      });\n\n      // return allStates.split(/, +/g).map( function (state) {\n      //   return {\n      //     value: state.toLowerCase(),\n      //     display: state\n      //   };\n      // });\n    }\n    /**\n     * Create filter function for a query string\n     */\n    function createFilterFor (query) {\n      var lowercaseQuery = angular.lowercase(query);\n      return function filterFn (state) {\n        return (state.value.indexOf(lowercaseQuery) === 0);\n      };\n    }\n  }\n})();\n","/* global datepickerModule */\n\n'use strict';\n\ndatepickerModule.controller('datepickerController', ['$scope', function ($scope) {\n  $scope.origDate = new Date();\n  $scope.origDate = new Date(\n    $scope.origDate.getFullYear(),\n    $scope.origDate.getMonth(),\n    $scope.origDate.getDate());\n  $scope.destDate = new Date(\n    $scope.origDate.getFullYear(),\n    $scope.origDate.getMonth(),\n    $scope.origDate.getDate() + 1);\n}]);\n"],"sourceRoot":"/source/"}